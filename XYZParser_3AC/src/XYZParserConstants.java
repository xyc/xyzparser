/* Generated By:JJTree&JavaCC: Do not edit this line. XYZParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface XYZParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int NOT = 6;
  /** RegularExpression Id. */
  int ASSIGN = 7;
  /** RegularExpression Id. */
  int AND = 8;
  /** RegularExpression Id. */
  int LT = 9;
  /** RegularExpression Id. */
  int PLUS = 10;
  /** RegularExpression Id. */
  int MINUS = 11;
  /** RegularExpression Id. */
  int MUL = 12;
  /** RegularExpression Id. */
  int PUBLIC = 13;
  /** RegularExpression Id. */
  int CLASS = 14;
  /** RegularExpression Id. */
  int EXTENDS = 15;
  /** RegularExpression Id. */
  int STATIC = 16;
  /** RegularExpression Id. */
  int VOID = 17;
  /** RegularExpression Id. */
  int MAIN = 18;
  /** RegularExpression Id. */
  int STRING = 19;
  /** RegularExpression Id. */
  int IF = 20;
  /** RegularExpression Id. */
  int ELSE = 21;
  /** RegularExpression Id. */
  int DO = 22;
  /** RegularExpression Id. */
  int WHILE = 23;
  /** RegularExpression Id. */
  int NEW = 24;
  /** RegularExpression Id. */
  int LENGTH = 25;
  /** RegularExpression Id. */
  int PRINT = 26;
  /** RegularExpression Id. */
  int INT = 27;
  /** RegularExpression Id. */
  int BOOLEAN = 28;
  /** RegularExpression Id. */
  int TRUE = 29;
  /** RegularExpression Id. */
  int FALSE = 30;
  /** RegularExpression Id. */
  int THIS = 31;
  /** RegularExpression Id. */
  int RETURN = 32;
  /** RegularExpression Id. */
  int DOUBLE = 33;
  /** RegularExpression Id. */
  int LBRACE = 34;
  /** RegularExpression Id. */
  int RBRACE = 35;
  /** RegularExpression Id. */
  int LBRACK = 36;
  /** RegularExpression Id. */
  int RBRACK = 37;
  /** RegularExpression Id. */
  int LPAREN = 38;
  /** RegularExpression Id. */
  int RPAREN = 39;
  /** RegularExpression Id. */
  int COMMA = 40;
  /** RegularExpression Id. */
  int SEMI = 41;
  /** RegularExpression Id. */
  int DOT = 42;
  /** RegularExpression Id. */
  int INTLITERAL = 43;
  /** RegularExpression Id. */
  int REALLITERAL = 44;
  /** RegularExpression Id. */
  int ID = 45;
  /** RegularExpression Id. */
  int ONE_LINE_COMMENT = 46;
  /** RegularExpression Id. */
  int LINES_COMMENT = 47;
  /** RegularExpression Id. */
  int FORMAL_COMMENT = 48;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"!\"",
    "\"=\"",
    "\"&&\"",
    "\"<\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"public\"",
    "\"class\"",
    "\"extends\"",
    "\"static\"",
    "\"void\"",
    "\"main\"",
    "\"String\"",
    "\"if\"",
    "\"else\"",
    "\"do\"",
    "\"while\"",
    "\"new\"",
    "\"length\"",
    "\"System.out.println\"",
    "\"int\"",
    "\"boolean\"",
    "\"true\"",
    "\"false\"",
    "\"this\"",
    "\"return\"",
    "\"double\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\";\"",
    "\".\"",
    "<INTLITERAL>",
    "<REALLITERAL>",
    "<ID>",
    "<ONE_LINE_COMMENT>",
    "<LINES_COMMENT>",
    "<FORMAL_COMMENT>",
  };

}
